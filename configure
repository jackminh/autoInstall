#!/bin/sh
LC_ALL=C
export LC_ALL
. auto/options
sh auto/uninstall
if [ $? -eq 2  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[42;31m uninstall success.\033[0m"
	else
		echo -e "\033[42;31m uninstall success. \033[0m"
	fi
	exit 1
fi
uninstall_path=$(echo $* | grep "\-\-uninstall\-path\=")
if [ ${#uninstall_path} -gt 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[42;31m invalid parameter.\033[0m"
	else
		echo -e "\033[42;31m invalid parameter. \033[0m"
	fi
	exit 1
fi
id=$(id -u)
if [ $id -ne 0  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[42;31m Make sure the current user has all permissions to the install path set to prefix. \033[0m"
	else
		echo -e "\033[42;31m Make sure the current user has all permissions to the install path set to prefix. \033[0m"
	fi
fi
test -d ${AUTOINSTALL_PREFIX} || mkdir -p ${AUTOINSTALL_PREFIX}
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m The current user does not have a permission to prefix. \033[0m"
	else
		echo -e "\033[41;34m The current user does not have a permission to prefix. \033[0m"
	fi
	exit 1
fi
test -d ${AUTOINSTALL_SOURCES} || mkdir -p ${AUTOINSTALL_SOURCES}
test -d ${AUTOINSTALL_TOOLS} || mkdir -p ${AUTOINSTALL_TOOLS}
test -d ${AUTOINSTALL_REPOSITORY} || mkdir -p ${AUTOINSTALL_REPOSITORY}
commond_path=$(which ${AUTOINSTALL_COMMOND})
length=${#AUTOINSTALL_COMMOND}
if [ "${commond_path:0-${length}}" != "${AUTOINSTALL_COMMOND}" ];then
	echo "Please install the ${AUTOINSTALL_COMMOND}" 
	exit 1
fi
echo "############################${AUTOINSTALL_COMMOND} updating .....###################################"

if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
	echo "${AUTOINSTALL_COMMOND}  update  2>/dev/null"
	${AUTOINSTALL_COMMOND}  update  2>/dev/null
else
	echo "${AUTOINSTALL_COMMOND} -y  update  2>/dev/null"
	${AUTOINSTALL_COMMOND} -y  update  2>/dev/null
fi
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo "\033[41;34mthe ${AUTOINSTALL_COMMOND} update failed,please update manually.\033[0m"
	else
	        echo -e "\033[41;34mthe ${AUTOINSTALL_COMMOND} update failed,please update manually.\033[0m"
	fi
	exit 1
fi
#Read the dependency library configuration file
echo "###############################################library list#######################################################"
while read line; do
	if [ "${line:0:1}" = "#" ] ;then
		continue
	fi
	echo $line
done < lib.ini
#end

#Read the source configuration file
echo "###############################################download package list#######################################################"
while read line; do
	if [ "${line:0:1}" = "#" ] ;then
		continue
	fi
	echo $line
done < source.ini
#end
commond_wget=$(which wget)
[ "${commond_wget:0-4}" = "wget" ] || (${AUTOINSTALL_COMMOND} -y install wget >/dev/null 2&1)
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34mPlease install wget\033[0m"
	else
		echo -e "\033[41;34mPlease install wget\033[0m"
	fi
	exit 1
fi
commond_grep=$(which grep)
[ "${commond_grep:0-4}" = "grep" ] || (${AUTOINSTALL_COMMOND} -y install grep >/dev/null 2&1)
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34mPlease install grep\033[0m"
	else
		echo -e "\033[41;34mPlease install grep\033[0m"
	fi
	exit 1
fi
commond_tar=$(which tar)
[ "${commond_tar:0-3}" = "tar" ] || (${AUTOINSTALL_COMMOND} -y install tar >/dev/null 2&1)
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34mPlease install tar\033[0m"
	else
		echo -e "\033[41;34mPlease install tar\033[0m"
	fi
	exit 1
fi
commond_unzip=$(which unzip)
[ "${commond_unzip:0-5}" = "unzip" ] || (${AUTOINSTALL_COMMOND} -y install unzip >/dev/null 2&1)
if [ $? -ne 0 ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34mPlease install unzip\033[0m"
	else
		echo -e "\033[41;34mPlease install unzip\033[0m"
	fi
	exit 1
fi
. auto/package
if [ $? -ne 0  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m package install failed.\033[0m"
	else
		echo -e "\033[41;34m package install failed.\033[0m"
	fi
	exit 1
fi
#install software
sh auto/stow/stow
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m stow install failed.\033[0m"
	else
		echo -e "\033[41;34m stow install failed.\033[0m"
	fi
	exit 1
fi
source $HOME/.bash_profile
sh auto/zlib/zlib
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m zlib install failed.\033[0m"
	else
		echo -e "\033[41;34m zlib install failed.\033[0m"
	fi
	exit 1
fi
sh auto/openssl/openssl
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m openssl install failed.\033[0m"
	else
		echo -e "\033[41;34m openssl install failed.\033[0m"
	fi
	exit 1
fi
sh auto/pcre/pcre
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m pcre install failed.\033[0m"
	else
		echo -e "\033[41;34m pcre install failed.\033[0m"
	fi
	exit 1
fi
sh auto/libxml/libxml
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m libxml install failed.\033[0m"
	else
		echo -e "\033[41;34m libxml install failed.\033[0m"
	fi
	exit 1
fi
sh auto/cmake/cmake
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m cmake install failed.\033[0m"
	else
		echo -e "\033[41;34m cmake install failed.\033[0m"
	fi
	exit 1
fi
sh auto/apache/apache
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m apache install failed.\033[0m"
	else
		echo -e "\033[41;34m apache install failed.\033[0m"
	fi
	exit 1
fi
sh auto/mysql/mysql
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m mysql install failed.\033[0m"
	else
		echo -e "\033[41;34m mysql install failed.\033[0m"
	fi
	exit 1
fi

sh auto/php/php
if [ $? -eq 1  ];then
	if [ "${AUTOINSTALL_COMMOND}" = "brew"   ];then
		echo  "\033[41;34m php install failed.\033[0m"
	else
		echo -e "\033[41;34m php install failed.\033[0m"
	fi
	exit 1
fi


